[
    {
        "UpdateStageName": "7-Zip Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullRootDir}}7-Zip"
    },
    {
        "UpdateStageName": "7-Zip Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://www.7-zip.org/a/7z2301-linux-x64.tar.xz",
        "UpdateSourceTarget": "{{$FullRootDir}}7-Zip",
        "OverwriteExistingFiles": true
    },
    {
        "UpdateStageName": "7-Zip Files Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd {{$FullRootDir}}/7-Zip && tar -xf 7z2301-linux-x64.tar.xz >/dev/null 2>&1 && rm -f 7z2301-linux-x64.tar.xz\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Base Files Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "{{URLBuild}}",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UpdateSourceConditionSetting": "InstallbyURL",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Base Files Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd {{$FullBaseDir}} && echo \\\"Changed to Base Directory\\\" && ../7-Zip/7zzs x -y -p{{BasePassword}} latest.7z && echo \\\"Extracted Base Files\\\" >/dev/null 2>&1 && rm -f latest.7z\"",
        "OverwriteExistingFiles": true,
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "InstallbyURL",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Game Files Download / Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
		"UpdateSourceArgs": "-c \"cd {{$FullBaseDir}} && wget -i links.txt -q --show-progress --progress=bar:force 2>&1 && echo \\\"Starting Archive Extraction, This may take some time.\\\" && ../7-Zip/7zzs x -y *.7z.001 >/dev/null 2>&1 && rm -f *.7z.* && rm -f links.txt && rm -f extracts.txt\"",
        "OverwriteExistingFiles": true,
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "InstallbyURL",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "SteamCMD Server Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "SteamCMD",
        "UpdateSourceData": "740",
        "UpdateSourceArgs": "730",
        "UpdateSourceConditionSetting": "InstallbyURL",
        "UpdateSourceConditionValue": "false"
    },
    {
        "UpdateStageName": "Patch Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "{{PatchURL}}",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "InstallPatch",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Patch Files Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd {{$FullBaseDir}} && ../7-Zip/7zzs x -y latest.7z >/dev/null 2>&1 && rm -f latest.7z\"",
        "OverwriteExistingFiles": true,
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "HasPassword",
        "UpdateSourceConditionValue": "false"
    },
    {
        "UpdateStageName": "Patch Files Extract (Passworded)",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd {{$FullBaseDir}} && echo \\\"Changed to Base Directory\\\" && echo \\\"Extracting Patch Files\\\" && ../7-Zip/7zzs x -y -p{{PatchPassword}} latest.7z >/dev/null 2>&1 && rm -f latest.7z\"",
        "OverwriteExistingFiles": true,
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "HasPassword",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Remove Old Library",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"rm -rf csgo/740/bin/libgcc_s.so.1 >/dev/null 2>&1\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Demo Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}csgo/demos"
    },
    {
        "UpdateStageName": "Server.cfg Template File Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://raw.githubusercontent.com/bindon10/AMPTemplates-bindon/dev/counter-strike-customserver.cfg",
        "UpdateSourceArgs": "AMP_server.cfg",
        "UpdateSourceTarget": "{{$FullRootDir}}",
        "OverwriteExistingFiles": true
    },
    {
        "UpdateStageName": "Metamod Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"MetamodBuild=\\\"{{MetamodBuild}}\\\" && ModBranch=\\\"{{ModBranch}}\\\" && if [[ -z \\\"$MetamodBuild\\\" ]]; then LatestMetamodFile=$(wget -qO- https://mms.alliedmods.net/mmsdrop/$ModBranch/mmsource-latest-linux) && wget -qO metamod.tar.gz https://mms.alliedmods.net/mmsdrop/$ModBranch/$LatestMetamodFile && echo \\\"Latest Metamod $ModBranch build downloaded\\\"; elif [[ ! \\\"$MetamodBuild\\\" =~ ^[0-9]+$ ]]; then echo \\\"Invalid Metamod build version format specified\\\" && exit 1; else wget -qO metamod.tar.gz https://mms.alliedmods.net/mmsdrop/$ModBranch/mmsource-$ModBranch.0-git$MetamodBuild-linux.tar.gz && echo \\\"Metamod $ModBranch build $MetamodBuild downloaded\\\"; fi\"",
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Metamod Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "metamod.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}csgo",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "SourceMod Download Directory Creation",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateDirectory",
        "UpdateSourceArgs": "{{$FullBaseDir}}sm",
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "SourceMod Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"SourceModVersion=\\\"{{SourceModVersion}}\\\" && SourceModBranch=\\\"{{SourceModBranch}}\\\" && if [[ -z \\\"$SourceModVersion\\\" ]]; then LatestSourceModFile=$(wget -qO- https://sm.alliedmods.net/smdrop/$SourceModBranch/sourcemod-latest-linux) && wget -qO sourcemod.tar.gz https://sm.alliedmods.net/smdrop/$SourceModBranch/$LatestSourceModFile && echo \\\"Latest SourceMod $SourceModBranch build downloaded\\\"; elif [[ ! \\\"$SourceModVersion\\\" =~ ^[0-9]+$ ]]; then echo \\\"Invalid SourceMod build version format specified\\\" && exit 1; else wget -qO sourcemod.tar.gz https://sm.alliedmods.net/smdrop/$SourceModBranch/sourcemod-$SourceModBranch.0-git$SourceModVersion-linux.tar.gz && echo \\\"SourceMod $SourceModBranch build $SourceModVersion downloaded\\\"; fi\"",
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "SourceMod Extract",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "ExtractArchive",
        "UpdateSourceData": "sourcemod.tar.gz",
        "UpdateSourceTarget": "{{$FullBaseDir}}sm",
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "SkipOnFailure": false,
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "SourceMod Installation",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd csgo/740 && [ -d csgo/cfg/sourcemod ] && rm -rf sm/cfg/sourcemod >/dev/null 2>&1; [ -d csgo/addons/sourcemod/configs ] && rm -rf sm/addons/sourcemod/configs >/dev/null 2>&1; [ -d csgo/addons/sourcemod/plugins ] && rm -rf sm/addons/sourcemod/plugins >/dev/null 2>&1; \\cp -rf sm/* csgo/ >/dev/null 2>&1; rm -rf sm >/dev/null 2>&1\"",
        "SkipOnFailure": true,
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Activate Metamod and SourceMod",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "CreateFile",
        "UpdateSourceData": "\"Plugin\"\n{\n\t\"file\"\t\"../csgo/addons/metamod/bin/server\"\n}",
        "UpdateSourceArgs": "{{$FullBaseDir}}csgo/addons/metamod.vdf",
        "OverwriteExistingFiles": true,
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "Disable Metamod and SourceMod",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd ship/2403/ship/addons >/dev/null 2>&1 && rm -rf metamod.vdf >/dev/null 2>&1; exit 0\"",
        "UpdateSourceConditionSetting": "InstallMod",
        "UpdateSourceConditionValue": "false"
    },
    {
        "UpdateStageName": "NoLobbyReservation Plugin Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "GithubRelease",
        "UpdateSourceArgs": "vanz666/NoLobbyReservation",
        "UpdateSourceTarget": "{{$FullBaseDir}}csgo",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "InstallNLR",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "NoLobbyReservation Gamedata Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://raw.githubusercontent.com/eldoradoel/NoLobbyReservation/master/csgo/addons/sourcemod/gamedata/nolobbyreservation.games.txt",
        "UpdateSourceTarget": "{{$FullBaseDir}}csgo/addons/sourcemod/gamedata",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "InstallNLR",
        "UpdateSourceConditionValue": "true"
    },
    {
        "UpdateStageName": "NoLobbyReservation Scripting Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "https://raw.githubusercontent.com/eldoradoel/NoLobbyReservation/master/csgo/addons/sourcemod/scripting/nolobbyreservation.sp",
        "UpdateSourceTarget": "{{$FullBaseDir}}csgo/addons/sourcemod/scripting",
        "UnzipUpdateSource": true,
        "OverwriteExistingFiles": true,
        "DeleteAfterExtract": true,
        "UpdateSourceConditionSetting": "InstallNLR",
        "UpdateSourceConditionValue": "true"
    }
]